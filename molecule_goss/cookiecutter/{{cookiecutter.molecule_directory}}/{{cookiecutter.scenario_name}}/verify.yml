---
{% raw -%}
- name: Verify
  hosts: all
  become: true
  vars:
    goss_version: v0.3.16
    goss_arch: amd64
    goss_bin: /usr/local/bin/goss
    goss_sha256sum: 827e354b48f93bce933f5efcd1f00dc82569c42a179cf2d384b040d8a80bfbfb.
    goss_test_directory: /tmp/molecule/goss
    goss_format: documentation
    goss_vars: "{{ goss_test_directory }}/vars"
    copy_defaults_vars: false
  tasks:
    - name: Download and install Goss
      get_url:
        url: "https://github.com/aelsabbahy/goss/releases/download/{{ goss_version }}/goss-linux-{{ goss_arch }}"
        dest: "{{ goss_bin }}"
        checksum: "sha256:{{ goss_sha256sum }}"
        mode: 0755

    - name: Create Molecule directory for test files
      file:
        path: "{{ goss_test_directory }}"
        state: directory
        mode: 0644

    - name: Find Goss tests on localhost
      find:
        paths: "{{ lookup('env', 'MOLECULE_VERIFIER_TEST_DIRECTORY') }}"
        patterns:
          - "test[-.\\w]*.yml"
          - "test_host_{{ ansible_hostname }}[-.\\w]*.yml"
        excludes:
          - "test_host_(?!{{ ansible_hostname }})[-.\\w]*.yml"
        use_regex: true
      delegate_to: localhost
      register: test_files
      changed_when: false
      become: false

    - name: debug
      debug:
        msg: "{{ test_files.files }}"
        verbosity: 3

    - name: Copy defaults vars to goss vars
      copy:
        src: "{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') }}/defaults/main.yml"
        dest: "{{ goss_vars }}"
        mode: 0644
      when: copy_defaults_vars

    - name: Copy Goss tests to remote
      copy:
        src: "{{ item.path }}"
        dest: "{{ goss_test_directory }}/{{ item.path | basename }}"
        mode: 0644
      with_items:
        - "{{ test_files.files }}"

    - name: Register test files
      shell: "ls {{ goss_test_directory }}/test_*.yml"
      changed_when: false
      register: test_files

    - name: Execute Goss tests
      command:
        "{{ goss_bin }}
         {% if copy_defaults_vars %}
         --vars {{ goss_vars }}
         {% endif %}
         -g {{ item }} validate --format {{ goss_format }}"
      register: test_results
      with_items: "{{ test_files.stdout_lines }}"
      changed_when: false
      failed_when: false

    - name: Display details about the Goss results
      debug:
        msg: "{{ item.stdout_lines }}"
      with_items: "{{ test_results.results }}"

    - name: Fail when tests fail
      fail:
        msg: "Goss failed to validate"
      when: item.rc != 0
      with_items: "{{ test_results.results }}"
{% endraw -%}
